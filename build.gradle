buildscript {
    ext {
        kotlinVersion = '1.2.70'
        springBootVersion = '2.0.5.RELEASE'
    }
    repositories {
        mavenLocal()
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
    }
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.thanksys'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8
compileKotlin { kotlinOptions { freeCompilerArgs = ["-Xjsr305=strict"]; jvmTarget = "1.8" } }
compileTestKotlin { kotlinOptions { freeCompilerArgs = ["-Xjsr305=strict"]; jvmTarget = "1.8" } }

repositories {
    mavenLocal()
    mavenCentral()
}


dependencies {
    compile 'org.springframework.boot:spring-boot-starter-data-mongodb-reactive'
    compile 'org.springframework.boot:spring-boot-starter-webflux'
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    compile "org.jetbrains.kotlin:kotlin-reflect"
    compile 'io.github.microutils:kotlin-logging:1.6.10'
    testCompile 'org.springframework.boot:spring-boot-starter-test'
    testCompile 'de.flapdoodle.embed:de.flapdoodle.embed.mongo'
    testCompile 'io.projectreactor:reactor-test'
    testCompile "org.junit.jupiter:junit-jupiter-api"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine"
}

test { useJUnitPlatform() }